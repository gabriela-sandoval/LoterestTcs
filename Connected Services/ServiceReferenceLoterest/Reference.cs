//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LoterestTcs.ServiceReferenceLoterest {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jugador", Namespace="http://schemas.datacontract.org/2004/07/AccesoBaseDeDatos")]
    [System.SerializableAttribute()]
    public partial class Jugador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseñaJugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoJugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdJugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreJugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PuntajeJugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PuntajeJugadorAlAzarField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContraseñaJugador {
            get {
                return this.ContraseñaJugadorField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseñaJugadorField, value) != true)) {
                    this.ContraseñaJugadorField = value;
                    this.RaisePropertyChanged("ContraseñaJugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorreoJugador {
            get {
                return this.CorreoJugadorField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoJugadorField, value) != true)) {
                    this.CorreoJugadorField = value;
                    this.RaisePropertyChanged("CorreoJugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdJugador {
            get {
                return this.IdJugadorField;
            }
            set {
                if ((this.IdJugadorField.Equals(value) != true)) {
                    this.IdJugadorField = value;
                    this.RaisePropertyChanged("IdJugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreJugador {
            get {
                return this.NombreJugadorField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreJugadorField, value) != true)) {
                    this.NombreJugadorField = value;
                    this.RaisePropertyChanged("NombreJugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PuntajeJugador {
            get {
                return this.PuntajeJugadorField;
            }
            set {
                if ((this.PuntajeJugadorField.Equals(value) != true)) {
                    this.PuntajeJugadorField = value;
                    this.RaisePropertyChanged("PuntajeJugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PuntajeJugadorAlAzar {
            get {
                return this.PuntajeJugadorAlAzarField;
            }
            set {
                if ((this.PuntajeJugadorAlAzarField.Equals(value) != true)) {
                    this.PuntajeJugadorAlAzarField = value;
                    this.RaisePropertyChanged("PuntajeJugadorAlAzar");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PuntajeUsuario", Namespace="http://schemas.datacontract.org/2004/07/MessageService")]
    [System.SerializableAttribute()]
    public partial class PuntajeUsuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> puntajeUsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreUsuario {
            get {
                return this.nombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreUsuarioField, value) != true)) {
                    this.nombreUsuarioField = value;
                    this.RaisePropertyChanged("nombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> puntajeUsuario {
            get {
                return this.puntajeUsuarioField;
            }
            set {
                if ((this.puntajeUsuarioField.Equals(value) != true)) {
                    this.puntajeUsuarioField = value;
                    this.RaisePropertyChanged("puntajeUsuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceLoterest.IUserManager", CallbackContract=typeof(LoterestTcs.ServiceReferenceLoterest.IUserManagerCallback))]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/CrearCuentaJugador")]
        void CrearCuentaJugador(LoterestTcs.ServiceReferenceLoterest.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/CrearCuentaJugador")]
        System.Threading.Tasks.Task CrearCuentaJugadorAsync(LoterestTcs.ServiceReferenceLoterest.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/IniciarSesion")]
        void IniciarSesion(string nombreUsuario, string contraseñaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/IniciarSesion")]
        System.Threading.Tasks.Task IniciarSesionAsync(string nombreUsuario, string contraseñaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/CambiarDatosJugador")]
        void CambiarDatosJugador(LoterestTcs.ServiceReferenceLoterest.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/CambiarDatosJugador")]
        System.Threading.Tasks.Task CambiarDatosJugadorAsync(LoterestTcs.ServiceReferenceLoterest.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/PuntajeMaximo")]
        void PuntajeMaximo(string nombreUsuario, int puntajeUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/PuntajeMaximo")]
        System.Threading.Tasks.Task PuntajeMaximoAsync(string nombreUsuario, int puntajeUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/EnviarMensajeChat")]
        void EnviarMensajeChat(string nombreUsuario, string mensajeUsuario, string nombreRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/EnviarMensajeChat")]
        System.Threading.Tasks.Task EnviarMensajeChatAsync(string nombreUsuario, string mensajeUsuario, string nombreRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/SolicitarPuntaje")]
        void SolicitarPuntaje();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/SolicitarPuntaje")]
        System.Threading.Tasks.Task SolicitarPuntajeAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/CerrarSesion")]
        void CerrarSesion(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/CerrarSesion")]
        System.Threading.Tasks.Task CerrarSesionAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/FinalizarJuego")]
        void FinalizarJuego(string nombreUsuario, string remitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/FinalizarJuego")]
        System.Threading.Tasks.Task FinalizarJuegoAsync(string nombreUsuario, string remitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/EnviarInvitacion")]
        void EnviarInvitacion(string mensajeUsuario, string modoJuego, string nombreUsuario, string remitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/EnviarInvitacion")]
        System.Threading.Tasks.Task EnviarInvitacionAsync(string mensajeUsuario, string modoJuego, string nombreUsuario, string remitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/ConfirmarInvitacion")]
        void ConfirmarInvitacion(bool opcion, string modoJuego, string nombreUsuario, string remitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/ConfirmarInvitacion")]
        System.Threading.Tasks.Task ConfirmarInvitacionAsync(bool opcion, string modoJuego, string nombreUsuario, string remitente);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/Respuesta")]
        void Respuesta(string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/DevuelveCuenta")]
        void DevuelveCuenta(LoterestTcs.ServiceReferenceLoterest.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/MensajeChat")]
        void MensajeChat(string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/MostrarPuntajes")]
        void MostrarPuntajes(LoterestTcs.ServiceReferenceLoterest.PuntajeUsuario[] puntajesUsuarios);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/RecibirConfirmacion")]
        void RecibirConfirmacion(bool opcion, string nombreUsuario, string modoJuego);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/RecibirInvitacion")]
        void RecibirInvitacion(string nombreUsuario, string mensajeUsuario, string modoJuego);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUserManager/FinPartida")]
        void FinPartida(string mensaje);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : LoterestTcs.ServiceReferenceLoterest.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.DuplexClientBase<LoterestTcs.ServiceReferenceLoterest.IUserManager>, LoterestTcs.ServiceReferenceLoterest.IUserManager {
        
        public UserManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public UserManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public UserManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void CrearCuentaJugador(LoterestTcs.ServiceReferenceLoterest.Jugador jugador) {
            base.Channel.CrearCuentaJugador(jugador);
        }
        
        public System.Threading.Tasks.Task CrearCuentaJugadorAsync(LoterestTcs.ServiceReferenceLoterest.Jugador jugador) {
            return base.Channel.CrearCuentaJugadorAsync(jugador);
        }
        
        public void IniciarSesion(string nombreUsuario, string contraseñaUsuario) {
            base.Channel.IniciarSesion(nombreUsuario, contraseñaUsuario);
        }
        
        public System.Threading.Tasks.Task IniciarSesionAsync(string nombreUsuario, string contraseñaUsuario) {
            return base.Channel.IniciarSesionAsync(nombreUsuario, contraseñaUsuario);
        }
        
        public void CambiarDatosJugador(LoterestTcs.ServiceReferenceLoterest.Jugador jugador) {
            base.Channel.CambiarDatosJugador(jugador);
        }
        
        public System.Threading.Tasks.Task CambiarDatosJugadorAsync(LoterestTcs.ServiceReferenceLoterest.Jugador jugador) {
            return base.Channel.CambiarDatosJugadorAsync(jugador);
        }
        
        public void PuntajeMaximo(string nombreUsuario, int puntajeUsuario) {
            base.Channel.PuntajeMaximo(nombreUsuario, puntajeUsuario);
        }
        
        public System.Threading.Tasks.Task PuntajeMaximoAsync(string nombreUsuario, int puntajeUsuario) {
            return base.Channel.PuntajeMaximoAsync(nombreUsuario, puntajeUsuario);
        }
        
        public void EnviarMensajeChat(string nombreUsuario, string mensajeUsuario, string nombreRemitente) {
            base.Channel.EnviarMensajeChat(nombreUsuario, mensajeUsuario, nombreRemitente);
        }
        
        public System.Threading.Tasks.Task EnviarMensajeChatAsync(string nombreUsuario, string mensajeUsuario, string nombreRemitente) {
            return base.Channel.EnviarMensajeChatAsync(nombreUsuario, mensajeUsuario, nombreRemitente);
        }
        
        public void SolicitarPuntaje() {
            base.Channel.SolicitarPuntaje();
        }
        
        public System.Threading.Tasks.Task SolicitarPuntajeAsync() {
            return base.Channel.SolicitarPuntajeAsync();
        }
        
        public void CerrarSesion(string nombreUsuario) {
            base.Channel.CerrarSesion(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task CerrarSesionAsync(string nombreUsuario) {
            return base.Channel.CerrarSesionAsync(nombreUsuario);
        }
        
        public void FinalizarJuego(string nombreUsuario, string remitente) {
            base.Channel.FinalizarJuego(nombreUsuario, remitente);
        }
        
        public System.Threading.Tasks.Task FinalizarJuegoAsync(string nombreUsuario, string remitente) {
            return base.Channel.FinalizarJuegoAsync(nombreUsuario, remitente);
        }
        
        public void EnviarInvitacion(string mensajeUsuario, string modoJuego, string nombreUsuario, string remitente) {
            base.Channel.EnviarInvitacion(mensajeUsuario, modoJuego, nombreUsuario, remitente);
        }
        
        public System.Threading.Tasks.Task EnviarInvitacionAsync(string mensajeUsuario, string modoJuego, string nombreUsuario, string remitente) {
            return base.Channel.EnviarInvitacionAsync(mensajeUsuario, modoJuego, nombreUsuario, remitente);
        }
        
        public void ConfirmarInvitacion(bool opcion, string modoJuego, string nombreUsuario, string remitente) {
            base.Channel.ConfirmarInvitacion(opcion, modoJuego, nombreUsuario, remitente);
        }
        
        public System.Threading.Tasks.Task ConfirmarInvitacionAsync(bool opcion, string modoJuego, string nombreUsuario, string remitente) {
            return base.Channel.ConfirmarInvitacionAsync(opcion, modoJuego, nombreUsuario, remitente);
        }
    }
}
